{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Laboratorio-01"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Con lo que se ha visto hasta ahora has acumulado una cantidad considerable de\n",
    "información y ya va siendo hora de ir asimilándola. ¿Qué mejor que unos cuantos\n",
    "ejercicios para ponerte a prueba?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Problema 1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. Escriba un programa en Python que imprima \"hola mundo\"."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Imprima hola mundo\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Problema 2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Escribe un programa que contenga las siguientes variables:\n",
    "- nombre: tipo string y valor “Kobe Bryant”\n",
    "- edad: tipo integer y valor 45\n",
    "- media_puntos: tipo float y valor 28.5\n",
    "- activo: False\n",
    "    \n",
    "El programa deberá mostrar en pantalla todos los valores."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# defina la variable nombre\n",
    "\n",
    "# defina la variable edad\n",
    "\n",
    "# defina la variable media_puntos\n",
    "\n",
    "# defina la variable activo\n",
    "\n",
    "# imprima las variables\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Problema 3"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Escribe un programa que genere un string compuesto por los primeros 3 caracteres y los último 3 caracteres del string \"aprendiendo python\"."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# la varible cadena ya está definida para usted\n",
    "cadena = \"aprendiendo python\"\n",
    "\n",
    "# imprima los primeros 3 caracteres\n",
    "\n",
    "\n",
    "# imprima los últimos 3 caracteres\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Problema 4"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Escribe un programa que haga un substring sobre \"*Bienvenido a la clase de introcción a la ciencia de datos*\", dónde la posición de inicio del substing es *11* y longitud de dicho substring es *8*. Imprima el resultado"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# defina la variable cadena\n",
    "\n",
    "\n",
    "# defina la variable posicion_inicio\n",
    "\n",
    "\n",
    "# defina la variable posicion_final\n",
    "\n",
    "\n",
    "# imprima el substring\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Problema 5"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Escriba un programa que tome el string \"*Bienvenido a la clase de introcción a la ciencia de datos*\", luego imprima el número de veces que está presente la letra \"**e**\" y por último reemplacela por el valor \"**3**\". Imprima el resulado final."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "# defina la variable cadena\n",
    "\n",
    "\n",
    "# imprima el numero de veces que aparece la letra e\n",
    "\n",
    "\n",
    "# reemplace e por 3\n",
    "\n",
    "\n",
    "# imprima el restultado\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Problema 6"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Crea un programa que tome los valores a = -8 y b = 8, luego compare los dichos valores con 0 y devuelva el siguiente mensaje:\n",
    "\n",
    "* Si a es menor que 0: \"a es un número negativo.\"\n",
    "* Si b es mayor que 0: \"b es un número positivo.\"\n",
    "* La suma de a +b : \"la suma de a + b es igual a \" + str(resultado)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# defina los variables a y b\n",
    "a = -8\n",
    "b = 8\n",
    "\n",
    "# escriba el condicional if muestre que a es menor que 0 e imprima el mensaje\n",
    "\n",
    "\n",
    "# escriba el condicional if muestre que b es mayor que 0 e imprima el mensaje\n",
    "\n",
    "\n",
    "# imprima la suma de a + b\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Problema 7"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Crea un programa que tome los valores a = -8 y b = 8, luego muestre por pantalla todos los números que hay entre los dos números (ambos incluidos). Por último sume todos los valores e imprima el resultado"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "# defina las variables a y b\n",
    "a = -8\n",
    "b = 8\n",
    "\n",
    "# imprima los valores entre a y b  (ambos incluidos)\n",
    "\n",
    "\n",
    "\n",
    "# sume e imprima todos los valores\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Problema 8"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Mejora el programa anterior para que muestre por separado la suma de los números pares y los impares."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "# defina las variables a y b\n",
    "a = -8\n",
    "b = 8\n",
    "\n",
    "\n",
    "# sume e imprima todos los valores pares\n",
    "\n",
    "\n",
    "\n",
    "# sume e imprima todos los valores impares\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Problema 9"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Escribe un programa que solicite al usuario un nombre de usuario y contraseña. El programa mostrará el mensaje “¡Bienvenido!” si el usuario introduce los siguientes datos:\n",
    "\n",
    "* Nombre de usuario: root\n",
    "* Contraseña: toor\n",
    "\n",
    "Si los datos de acceso son incorrectos mostrará el mensaje “Acceso fallido” y el programa finalizará."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Nombre de usuario:dubinho\n",
      "Contraseña:123\n",
      "Acceso fallido\n"
     ]
    }
   ],
   "source": [
    "# defina las variables iniciales\n",
    "username = 'root'\n",
    "password = 'toor'\n",
    "\n",
    "# defina las variables solicitadas al usuario como user y pas\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# genere el condicional con la comparación de las variables e imprima\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Problema 10"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Mejora el programa anterior para que permita 3 intentos. Cada vez vez que el usuario introduzca datos de acceso incorrectos el programa mostrará el mensaje: “*Datos incorrectos. Le quedan X intentos.*”, siendo *X* el número de intentos restantes. Tras el tercer fallo el programa mostrará el mensaje “*Acceso fallido*” y finalizará."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Nombre de usuario:a\n",
      "Contraseña:123\n",
      "Acceso fallido\n"
     ]
    }
   ],
   "source": [
    "# defina las variables iniciales\n",
    "username = 'root'\n",
    "password = 'toor'\n",
    "\n",
    "# defina las variables solicitadas al usuario como user y pas\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# genere el blucle con el condicional con la comparación de las variables e imprima\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
